apiVersion: apps/v1
kind: Deployment
metadata:
  name: chatwoot-rails
spec:
  replicas: 2
  selector:
    matchLabels:
      app: chatwoot-rails
  template:
    metadata:
      labels:
        app: chatwoot-rails
    spec:
      containers:
      - name: rails
        image: wavai/chatwoot-rails
        imagePullPolicy: Always
        command: ["/bin/sh"]
        args: ["-c", "bundle install && bundle add devise-secure_password && bundle add annotate bullet letter_opener scss_lint web-console json_refs squasher rack-mini-profiler stackprof meta_request database_cleaner webmock test-prof active_record_query_trace brakeman bundle-audit byebug climate_control debug factory_bot_rails listen mock_redis pry-rails rspec_junit_formatter rspec-rails rubocop rubocop-performance rubocop-rails rubocop-rspec seed_dump shoulda-matchers simplecov spring spring-watcher-listen uniform_notifier launchy sass bindex rack-contrib database_cleaner-active_record crack hashdiff bundler-audit irb reline factory_bot rb-fsevent rb-inotify pry && bundle exec rails server -b 0.0.0.0"]
        ports:
        - containerPort: 3000
        envFrom:
        - configMapRef:
            name: chatwoot-config
        - secretRef:
            name: chatwoot-secrets
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: chatwoot-secrets
              key: DATABASE_URL
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 90
          periodSeconds: 15
---
apiVersion: v1
kind: Service
metadata:
  name: chatwoot-rails
spec:
  selector:
    app: chatwoot-rails
  ports:
  - port: 3000
    targetPort: 3000
  type: ClusterIP 